"""
D√©chiffreur de C√©sar pour Messages Num√©riques
Ch√¢teau MacLeod - √âtape 1
"""

def dechiffrer_cesar(message_chiffre, decalage):
    """
    D√©chiffre un message num√©rique avec le chiffre de C√©sar.

    Args:
        message_chiffre (str): Le message chiffr√© (chiffres uniquement)
        decalage (int): Le d√©calage utilis√© pour le chiffrement

    Returns:
        str: Le message d√©chiffr√©
    """
    message_dechiffre = ""

    for caractere in message_chiffre:
        if caractere.isdigit():
            # Convertir en nombre
            chiffre = int(caractere)
            # Appliquer le d√©calage inverse (modulo 10 pour rester dans 0-9)
            chiffre_dechiffre = (chiffre - decalage) % 10
            message_dechiffre += str(chiffre_dechiffre)
        else:
            # Conserver les caract√®res non-num√©riques (espaces, ponctuation)
            message_dechiffre += caractere

    return message_dechiffre


def formater_coordonnees_gps(message_dechiffre):
    # V√©rifier la longueur minimale requise
    # Format: XXYYZZZZA BCCDDDD(E)
    # Latitude: XX¬∞YY'ZZ.Z"A (positions 0-8)
    # Longitude: B¬∞CC'DD.D"E (positions 9-16)

    modele = 'XX¬∞XX\'XX.X"N X¬∞XX\'XX.X"W'

    resultat = modele
    for c in message_dechiffre:
        resultat = resultat.replace('X', c, 1)  # remplace le premier X trouv√©

    return resultat


def analyser_cesar_brute_force(message_chiffre):
    """
    Teste tous les d√©calages possibles (0-9) pour aider √† trouver le bon.
    """
    print("=== Analyse par Force Brute ===\n")
    for decalage in range(10):
        resultat = dechiffrer_cesar(message_chiffre, decalage)
        print(f"D√©calage {decalage}: {resultat}")
    print()


# ========== D√âMONSTRATION SCIENTIFIQUE ==========

print("=" * 60)
print("CH√ÇTEAU MACLEOD - D√âCHIFFREMENT DES COORDONN√âES GPS")
print("=" * 60)
print()

# Message du parchemin
message_chiffre = "9153787770964"

print("üìú MESSAGE CHIFFR√â:")
print(f"   {message_chiffre}")
print()

decalage = 4
message_dechiffre = dechiffrer_cesar(message_chiffre, decalage)

print("‚úÖ MESSAGE D√âCHIFFR√â:")
print(f"   {message_dechiffre}")
print()

print("üó∫Ô∏è  COORDONN√âES GPS:")
coordonnees = formater_coordonnees_gps(message_dechiffre)
print(f"   {coordonnees}")
print()